'From Pharo8.0.0 of 22 January 2020 [Build information: Pharo-8.0.0+build.1124.sha.0932da82f08175e906b0e2a8052120c823374e9f (64 Bit)] on 10 January 2025 at 9:12:54.980677 pm'!Object subclass: #SparseMatrix	instanceVariableNames: ''	classVariableNames: ''	package: 'SparseMatrixExample'!!SparseMatrix methodsFor: 'matrixconvert' stamp: 'bookcollect 1/10/2025 20:53'!encodeFromTraditionalMatrix: traditionalMatrix    "Encodes a traditional matrix into a sparse matrix format."    | sparseMatrix |    sparseMatrix := OrderedCollection new.    traditionalMatrix doWithIndex: [ :row :rowIndex |        row doWithIndex: [ :value :colIndex |            value = 0 ifFalse: [                sparseMatrix add: {rowIndex. colIndex. value} ] ] ].    ^ sparseMatrix! !!SparseMatrix methodsFor: 'matrixconvert' stamp: 'bookcollect 1/10/2025 20:54'!decodeToTraditionalMatrix: sparseMatrix rows: rows cols: cols    "Decodes a sparse matrix into a traditional matrix format."    | traditionalMatrix |    traditionalMatrix := Array new: rows.    1 to: rows do: [ :row |        traditionalMatrix at: row put: (Array new: cols withAll: 0) ].    sparseMatrix do: [ :element |        | row col value |        row := element first.        col := element second.        value := element third.        (traditionalMatrix at: row) at: col put: value ].    ^ traditionalMatrix! !!SparseMatrix methodsFor: 'matrixconvert' stamp: 'bookcollect 1/10/2025 21:01'!testMatrixConversion    "Test the conversion between traditional matrix and sparse matrix representation."    | traditionalMatrix sparseMatrix decodedMatrix testResult |        "Step 1: Define a traditional matrix."    traditionalMatrix := #( #(1 0 0 0)                            #(0 2 0 0)                            #(0 0 3 0)                            #(0 0 0 4) ).    "Step 2: Encode the traditional matrix into sparse matrix format."    sparseMatrix := self encodeFromTraditionalMatrix: traditionalMatrix.    Transcript show: 'Encoded Sparse Matrix: ', sparseMatrix printString; cr.    "Step 3: Decode the sparse matrix back to traditional format."    decodedMatrix := self decodeToTraditionalMatrix: sparseMatrix rows: 4 cols: 4.    Transcript show: 'Decoded Matrix: ', decodedMatrix printString; cr.    "Step 4: Compare the decoded matrix with the original matrix."    testResult := (traditionalMatrix = decodedMatrix).    testResult        ifTrue: [ Transcript show: 'Test Passed: The decoded matrix matches the original!!'; cr ]        ifFalse: [ Transcript show: 'Test Failed: The decoded matrix does not match the original!!'; cr ].! !